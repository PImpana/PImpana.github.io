import numpy as np
import pandas as pd
import altair as alt

# Load data from CSV file
data = pd.read_csv('https://raw.githubusercontent.com/PImpana/PImpana.github.io/refs/heads/main/CC9/Borough_avgpay%26crime.csv')

# Ensure the column names are correctly used here
Average_annual_pay = data['Average annual pay']
Total_Crimes = data['Total Crimes']

# Calculate the best-fit line using np.polyfit, degree 1 for linear
slope, intercept = np.polyfit(Average_annual_pay, Total_Crimes, 1)

# Create the best-fit line
Total_Crimes_fit = slope * Average_annual_pay + intercept

# Calculate the residuals (differences between actual and fitted values)
residuals = Total_Crimes - Total_Crimes_fit

# Calculate SS_tot (Total sum of squares)
SS_tot = np.sum((Total_Crimes - np.mean(Total_Crimes)) ** 2)

# Calculate SS_res (Residual sum of squares)
SS_res = np.sum(residuals ** 2)

# Calculate R-squared
R_squared = 1 - (SS_res / SS_tot)

# Convert the data and fitted line into a DataFrame
fit_data = pd.DataFrame({
    'Average annual pay': Average_annual_pay,
    'Total Crimes': Total_Crimes,
    'Fitted line': Total_Crimes_fit
})

# Create the Vega-Lite chart using Altair
scatter_plot = alt.Chart(fit_data).mark_circle(size=60).encode(
    x='Average annual pay',
    y='Total Crimes',
    tooltip=['Average annual pay', 'Total Crimes']
).properties(title="Scatter Plot of Average Pay vs Total Crimes")

line_plot = alt.Chart(fit_data).mark_line(color='red').encode(
    x='Average annual pay',
    y='Fitted line'
)

# Combine scatter plot and best-fit line plot
final_chart = scatter_plot + line_plot

final_chart.show()

# Output the equation of the best-fit line and the R-squared value
print(f"Best-fit line: Total Crimes = {slope:.2f} * Average annual pay + {intercept:.2f}")
print(f"R-squared: {R_squared:.4f}")
